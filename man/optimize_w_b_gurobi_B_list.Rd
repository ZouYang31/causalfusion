% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithm.R
\name{optimize_w_b_gurobi_B_list}
\alias{optimize_w_b_gurobi_B_list}
\title{Optimize Synthetic Weights with Quadratic Constraints (Gurobi)}
\usage{
optimize_w_b_gurobi_B_list(
  par = stop("B missing"),
  F_treated = stop("F_treated missing"),
  F_control = stop("F_control missing"),
  X_treated = stop("X missing"),
  X_control = stop("X missing"),
  Z_treated = stop("Z missing"),
  Z_control = stop("Z missing"),
  t_max = stop("t_max missing"),
  dr = stop("dr missing"),
  dt = stop("dt missing"),
  i_max = stop("i_max missing"),
  NSE_Z_baseline = stop("NSE_Z_baseline missing"),
  NSE_X_baseline = stop("NSE_X_baseline missing"),
  eta_Z = 0.1,
  eta_X = 0.1
)
}
\arguments{
\item{par}{A named list of weight parameters: \code{b_F}, \code{b_X}, and \code{b_Z}. These control the contribution of each data domain in the objective.}

\item{F_treated}{A numeric vector for the treated unitâ€™s outcome.}

\item{F_control}{A matrix for the control units' outcomes (rows = units, cols = time points).}

\item{X_treated}{A numeric vector of covariates for the treated unit in the target domain.}

\item{X_control}{A matrix of covariates for the control units in the target domain.}

\item{Z_treated}{A numeric vector of covariates for the treated unit in the reference domain.}

\item{Z_control}{A matrix of covariates for the control units in the reference domain.}

\item{t_max}{An integer representing the number of time points for the \code{F} matrix.}

\item{dr}{An integer representing the number of covariates in \code{Z}.}

\item{dt}{An integer representing the number of covariates in \code{X}.}

\item{i_max}{An integer indicating the total number of units (treated + controls).}

\item{NSE_Z_baseline}{Best possibly normalized squared error for \code{Z}, used to define the quadratic constraint.}

\item{NSE_X_baseline}{Best possibly normalized squared error for \code{X}, used to define the quadratic constraint.}

\item{eta_Z}{A numeric parameter for the \code{Z} constraint. Default is \code{0.1}.}

\item{eta_X}{A numeric parameter for the \code{X} constraint. Default is \code{0.1}.}
}
\value{
A list with two elements:
\describe{
\item{loss.B}{The loss value from the \code{F} domain, based on the optimized weights.}
\item{solution.w}{A numeric vector of optimized weights \code{w}. If optimization fails, returns \code{NA}.}
}
}
\description{
This function computes optimal synthetic control weights \code{w} by solving a constrained
quadratic optimization problem using the \code{gurobi} solver. The objective minimizes the sum of weighted
NSEs (\code{F}, \code{X}, \code{Z}), subject to
constraints on the allowable reconstruction error in \code{X} and \code{Z}.
}
\details{
The function solves a constrained optimization problem:
\deqn{w^* = \arg\min_w \left[ b_F \cdot \text{NSE}_F(F_1, w) + b_X \cdot \text{NSE}_X(X_1, w) + b_Z \cdot \text{NSE}_Z(Z_1, w) \right]}
subject to quadratic constraints on \code{X} and \code{Z} reconstruction errors.
Constraints ensure that the error does not exceed a slack-adjusted baseline error.

The optimization uses Gurobi's \code{quadcon} feature for enforcing quadratic constraints and
assumes convexity of the problem. The output is a set of weights \code{w} that minimize
the total loss while satisfying the constraints.
}
\examples{
\dontrun{
par <- list(b_F = 0.3, b_X = 0.4, b_Z = 0.3)
F_treated <- rnorm(10)
F_control <- matrix(rnorm(30), nrow = 3)
X_treated <- rnorm(5)
X_control <- matrix(rnorm(15), nrow = 3)
Z_treated <- rnorm(4)
Z_control <- matrix(rnorm(12), nrow = 3)
result <- optimize_w_b_gurobi_B_list(
  par, F_treated, F_control,
  X_treated, X_control,
  Z_treated, Z_control,
  t_max = 10, dr = 4, dt = 5, i_max = 4,
  NSE_Z_baseline = 0.1, NSE_X_baseline = 0.2
)
}

}
