% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_w.R
\name{optimize_w_ipop}
\alias{optimize_w_ipop}
\title{Optimize Synthetic Weights via Quadratic Programming (ipop)}
\usage{
optimize_w_ipop(
  X,
  n_X,
  i_max,
  margin.ipop = 1e-04,
  sigf.ipop = 5,
  bound.ipop = 10
)
}
\arguments{
\item{X}{A numeric matrix of covariates in the target domain or reference domain. First row is the treated unit,
remaining rows are control units.}

\item{n_X}{Integer. Number of covariates in the target domain or reference domain, used for scaling.}

\item{i_max}{Integer. Total number of units (treated + control).}

\item{margin.ipop}{Numeric. Margin for constraint violation tolerance in \code{ipop}. Default is \code{1e-4}.}

\item{sigf.ipop}{Integer. Number of significant figures in \code{ipop} solution. Default is \code{5}.}

\item{bound.ipop}{Numeric. Box constraint bound in \code{ipop}. Default is \code{10}.}
}
\value{
A list containing:
\describe{
\item{weights}{A numeric vector of optimized synthetic control weights.}
\item{loss}{The squared loss between treated and weighted control units.}
}
}
\description{
This function estimates synthetic control weights using the
\code{ipop()} function from the \code{kernlab} package to solve a constrained
quadratic programming problem. The weights are optimized to match the treated unit
to a convex combination of control units based on covariates \code{X} or \code{Z}.
}
\details{
This function uses quadratic programming to find weights \eqn{w} such that
\eqn{X_{treated} \approx X_{control} \cdot w}, subject to constraints:
\itemize{
\item \eqn{\sum w = 1}
\item \eqn{w \geq 0}
\item \eqn{w \leq 1}
}
The optimization problem is solved using \code{ipop()} from the \code{kernlab} package.
}
\examples{
i_max = 31; dt = 3
X <- matrix(runif(i_max * dt, min=0, max=1), nrow = i_max, ncol = dt) # target domain
test <- optimize_w_ipop(X = X, n_X = ncol(X), i_max = nrow(X),
margin.ipop = 1e-4, sigf.ipop = 5, bound.ipop = 10)
test$weights

}
