% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithm.R
\name{find_best_B}
\alias{find_best_B}
\title{Find Optimal Weighting Parameters B for Synthetic Control}
\usage{
find_best_B(
  B,
  F_treated,
  F_control,
  X_treated,
  X_control,
  Z_treated,
  Z_control,
  t_max,
  dr,
  dt,
  i_max,
  NSE_Z_baseline,
  NSE_X_baseline,
  eta_Z,
  eta_X
)
}
\arguments{
\item{B}{A list of candidate parameter sets. Each element should be a list with named elements \code{b_F}, \code{b_X}, and \code{b_Z}.}

\item{F_treated}{A numeric vector for the treated unitâ€™s outcome.}

\item{F_control}{A matrix for the control units' outcomes (rows = units, cols = time points).}

\item{X_treated}{A numeric vector of covariates for the treated unit in the target domain.}

\item{X_control}{A matrix of covariates for the control units in the target domain.}

\item{Z_treated}{A numeric vector of covariates for the treated unit in the reference domain.}

\item{Z_control}{A matrix of covariates for the control units in the reference domain.}

\item{t_max}{An integer representing the number of time points for the \code{F} matrix.}

\item{dr}{An integer representing the number of covariates in \code{Z}.}

\item{dt}{An integer representing the number of covariates in \code{X}.}

\item{i_max}{An integer indicating the total number of units (treated + controls).}

\item{NSE_Z_baseline}{Best possibly normalized squared error for \code{Z}, used to define the quadratic constraint.}

\item{NSE_X_baseline}{Best possibly normalized squared error for \code{X}, used to define the quadratic constraint.}

\item{eta_Z}{A numeric parameter for the \code{Z} constraint. Default is \code{0.1}.}

\item{eta_X}{A numeric parameter for the \code{X} constraint. Default is \code{0.1}.}
}
\value{
A list containing:
\describe{
\item{best_B_list}{The parameter set B that achieved the smallest loss.}
\item{least_loss_B}{The minimum loss value achieved across all candidates.}
\item{best_w_star}{The synthetic control weights corresponding to the best \code{B}.}
}
}
\description{
This function searches over a list of candidate B parameter sets (weightings for domains F, X, and Z)
to find the one that yields the lowest loss using the Gurobi-based optimizer.
}
\details{
For each candidate \code{B} in the input list, this function calls \code{optimize_w_b_gurobi_B_list()}
to compute the optimal weights and loss. The candidate \code{B} that achieves the lowest loss on
the outcome dimension \code{F} is selected as the best. This can be useful in hyperparameter
tuning or model selection for synthetic control algorithms with domain-weighted objectives.
}
\examples{
\dontrun{
B_candidates <- list(
  list(b_F = 0.4, b_X = 0.3, b_Z = 0.3),
  list(b_F = 0.6, b_X = 0.2, b_Z = 0.2)
)
result <- find_best_B(
  B = B_candidates,
  F_treated = rnorm(10),
  F_control = matrix(rnorm(30), nrow = 3),
  X_treated = rnorm(5),
  X_control = matrix(rnorm(15), nrow = 3),
  Z_treated = rnorm(4),
  Z_control = matrix(rnorm(12), nrow = 3),
  t_max = 10, dr = 4, dt = 5, i_max = 4,
  NSE_Z_baseline = 0.1, NSE_X_baseline = 0.2,
  eta_Z = 0.1, eta_X = 0.1
)
}

}
\seealso{
\code{\link{optimize_w_b_gurobi_B_list}}
}
